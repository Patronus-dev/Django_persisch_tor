# Generated by Django 5.0.7 on 2025-03-09 19:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('places', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(help_text='Enter your name.', max_length=100, verbose_name='Name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Enter your phone number.', max_length=15, null=True, region='DE', unique=True, verbose_name='Phone Number')),
                ('email', models.EmailField(help_text='Enter your Email address.', max_length=254, unique=True, verbose_name='E-Mail')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='Profile photo')),
                ('total_reports', models.IntegerField(default=0)),
                ('total_reviews', models.IntegerField(default=0)),
                ('is_banned', models.BooleanField(default=False)),
                ('favorite_places', models.ManyToManyField(blank=True, to='places.place')),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_groups', to='auth.group')),
                ('reported_places', models.ManyToManyField(blank=True, related_name='reports', to='places.place')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
